name: Publish to npm

on:
  # Release‰ΩúÊàêÊôÇ„Å´Ëá™ÂãïÂÆüË°å
  release:
    types: [published]

  # ÊâãÂãïÂÆüË°å„ÇíË®±ÂèØ
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for package.json version)'
        required: false
        type: string
      tag:
        description: 'npm dist-tag (latest, next, beta)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - next
          - beta
          - alpha

permissions:
  contents: read
  id-token: write  # For npm provenance

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          cd packages/cli
          npm install

      - name: Run tests
        run: |
          cd packages/cli
          npm test
        continue-on-error: false

      - name: Build package
        run: |
          cd packages/cli
          npm run build

      - name: Check package contents
        run: |
          cd packages/cli
          npm pack --dry-run

      - name: Get package version
        id: package-version
        run: |
          cd packages/cli
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Package version: $VERSION"

      - name: Check if version exists on npm
        id: check-version
        run: |
          cd packages/cli
          VERSION=${{ steps.package-version.outputs.version }}
          if npm view miyabi@$VERSION version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Version $VERSION already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Version $VERSION is new"
          fi
        continue-on-error: true

      - name: Publish to npm (with provenance)
        if: steps.check-version.outputs.exists != 'true'
        run: |
          cd packages/cli
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create npm badge
        if: steps.check-version.outputs.exists != 'true'
        run: |
          VERSION=${{ steps.package-version.outputs.version }}
          echo "### üì¶ Published to npm" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: miyabi@$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**Registry**: https://www.npmjs.com/package/miyabi" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Install with:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install miyabi@$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "# or" >> $GITHUB_STEP_SUMMARY
          echo "npx miyabi@$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Skip publish (version exists)
        if: steps.check-version.outputs.exists == 'true'
        run: |
          VERSION=${{ steps.package-version.outputs.version }}
          echo "### ‚è≠Ô∏è Skipped Publishing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Version miyabi@$VERSION already exists on npm" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "To publish a new version:" >> $GITHUB_STEP_SUMMARY
          echo "1. Bump version in packages/cli/package.json" >> $GITHUB_STEP_SUMMARY
          echo "2. Create a new release on GitHub" >> $GITHUB_STEP_SUMMARY
          echo "3. This workflow will run automatically" >> $GITHUB_STEP_SUMMARY

  notify:
    name: Notify on failure
    runs-on: ubuntu-latest
    needs: publish
    if: failure()

    steps:
      - name: Create issue on publish failure
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = `npm publish failed for v${{ needs.publish.outputs.version }}`;
            const issueBody = `## npm Publish Failure

            **Version**: ${{ needs.publish.outputs.version }}
            **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ### Error Details

            The npm publish workflow failed. Please check the workflow logs for details.

            ### Possible Causes

            1. **npm token expired or invalid**
               - Check NPM_TOKEN secret in repository settings
               - Regenerate token at https://www.npmjs.com/settings/YOUR_USERNAME/tokens

            2. **Version already published**
               - Check if version exists: \`npm view miyabi versions\`
               - Bump version in package.json if needed

            3. **Build or test failures**
               - Review test logs
               - Fix any TypeScript compilation errors

            4. **Network or registry issues**
               - Check npm registry status: https://status.npmjs.org
               - Retry workflow after registry recovery

            ### Next Steps

            1. Review workflow logs
            2. Fix the underlying issue
            3. Re-run workflow or create new release

            ü§ñ Auto-generated by npm-publish workflow
            `;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['üìä priority:P2-Medium', 'üêõ type:bug', 'automation']
            });
