name: Commit to Issue Automation

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'docs/**'

permissions:
  issues: write
  contents: read

jobs:
  check-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Check for #auto tag
        id: check
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ "$COMMIT_MSG" == *"#auto"* ]]; then
            echo "create_issue=true" >> $GITHUB_OUTPUT
            # Extract commit message without #auto tag
            CLEAN_MSG=$(echo "$COMMIT_MSG" | sed 's/#auto//g' | xargs)
            echo "message<<EOF" >> $GITHUB_OUTPUT
            echo "$CLEAN_MSG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "create_issue=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        if: steps.check.outputs.create_issue == 'true'
        uses: actions/checkout@v4

      - name: Create Issue from commit
        if: steps.check.outputs.create_issue == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const commitMsg = `${{ steps.check.outputs.message }}`;
            const commitSha = '${{ github.sha }}';
            const commitUrl = '${{ github.event.head_commit.url }}';
            const author = '${{ github.event.head_commit.author.name }}';

            // Parse commit message (format: "type: description")
            const match = commitMsg.match(/^(\w+):\s*(.+)/);
            const type = match ? match[1] : 'feature';
            const description = match ? match[2] : commitMsg;

            // Determine label based on commit type
            let typeLabel = '✨ type:feature';
            if (type === 'fix') typeLabel = '🐛 type:bug';
            else if (type === 'docs') typeLabel = '📚 type:docs';
            else if (type === 'refactor') typeLabel = '♻️ type:refactor';
            else if (type === 'test') typeLabel = '🧪 type:test';

            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: description,
              body: `## Auto-generated from commit

**Commit:** ${commitSha.substring(0, 7)}
**Author:** ${author}
**URL:** ${commitUrl}

### Commit Message
\`\`\`
${commitMsg}
\`\`\`

### Task
This Issue was automatically created because the commit message contained \`#auto\`.

Please review and add any additional context or requirements.

---
🤖 Auto-generated by Agentic OS`,
              labels: [
                typeLabel,
                '📊 priority:P2-Medium',
                '🎯 phase:planning',
                '📥 state:pending'
              ]
            });

            console.log(`✅ Created Issue #${issue.data.number}: ${issue.data.title}`);

            // Trigger AI labeling workflow
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ai-auto-label.yml',
              ref: 'main',
              inputs: {
                issue_number: issue.data.number.toString()
              }
            }).catch(() => {
              // AI labeling workflow might not support manual dispatch
              console.log('Note: Could not trigger AI labeling (workflow may not support dispatch)');
            });
