{
  "name": "autonomous-operations",
  "version": "0.13.0",
  "description": "Complete autonomous AI development operations platform - Optimized for AI coding agents",
  "type": "module",
  "main": "index.js",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "start": "tsx scripts/operations/agentic.ts",
    "task": "tsx scripts/operations/execute-task.ts",
    "demo": "tsx scripts/operations/demo-rich-cli.ts",
    "setup:token": "tsx scripts/setup/setup-github-token.ts",
    "setup:project": "tsx scripts/setup/setup-github-project.ts",
    "agents:parallel:exec": "tsx scripts/operations/parallel-executor.ts",
    "agents:parallel:issues": "npm run agents:parallel:exec --",
    "agents:parallel:todos": "npm run agents:parallel:exec --",
    "agents:status": "tsx scripts/operations/check-status.ts",
    "kpi:collect": "tsx scripts/collect-kpi.ts",
    "dashboard:generate": "tsx scripts/generate-dashboard.ts",
    "project:info": "tsx scripts/github/github-project-api.ts info",
    "project:items": "tsx scripts/github/github-project-api.ts items",
    "project:metrics": "tsx scripts/github/github-project-api.ts metrics",
    "project:report": "tsx scripts/github/github-project-api.ts report",
    "report:weekly": "tsx scripts/reporting/generate-weekly-report.ts",
    "report:weekly:issue": "tsx scripts/reporting/generate-weekly-report.ts --create-issue",
    "state:check": "tsx scripts/operations/label-state-machine.ts check",
    "state:transition": "tsx scripts/operations/label-state-machine.ts transition",
    "state:assign-agent": "tsx scripts/operations/label-state-machine.ts assign-agent",
    "ai:label": "tsx scripts/github/ai-label-issue.ts",
    "webhook:test:issue": "tsx scripts/cicd/webhook-router.ts issue opened 123",
    "webhook:test:pr": "tsx scripts/cicd/webhook-router.ts pr opened 45",
    "webhook:test:push": "tsx scripts/cicd/webhook-router.ts push main abc123",
    "webhook:test:comment": "tsx scripts/cicd/webhook-router.ts comment 123 testuser",
    "workflow:execute": "tsx scripts/operations/workflow-orchestrator.ts execute",
    "workflow:parallel": "tsx scripts/operations/workflow-orchestrator.ts parallel",
    "kb:sync": "tsx scripts/github/knowledge-base-sync.ts post-issue",
    "kb:weekly": "tsx scripts/github/knowledge-base-sync.ts post-weekly",
    "kb:tdr": "tsx scripts/github/knowledge-base-sync.ts post-tdr",
    "metrics:generate": "tsx scripts/reporting/generate-realtime-metrics.ts",
    "cicd:monitor": "tsx scripts/cicd/cicd-integration.ts monitor",
    "cicd:deploy": "tsx scripts/cicd/cicd-integration.ts deploy",
    "cicd:rollback": "tsx scripts/cicd/cicd-integration.ts rollback",
    "security:report": "tsx scripts/security/security-report.ts",
    "security:report:save": "tsx scripts/security/security-report.ts --save",
    "security:report:github": "tsx scripts/security/security-report.ts --github",
    "security:audit": "npm audit && npm audit --package-lock-only",
    "security:scan": "tsx scripts/security/security-manager.ts scan-secrets",
    "security:codeowners": "tsx scripts/security/security-manager.ts codeowners",
    "perf:optimize": "tsx scripts/cicd/performance-optimizer.ts optimize",
    "perf:profile": "tsx scripts/cicd/performance-optimizer.ts profile",
    "perf:report": "tsx scripts/reporting/performance-report.ts",
    "perf:benchmark": "tsx scripts/operations/benchmark-agents.ts",
    "parallel:run": "tsx scripts/operations/parallel-agent-runner.ts run",
    "docs:generate": "tsx scripts/reporting/doc-generator.ts generate",
    "docs:training": "tsx scripts/reporting/training-material-generator.ts generate",
    "lint": "eslint . --ext .ts,.tsx",
    "typecheck": "tsc --noEmit",
    "test": "vitest",
    "test:improvements": "tsx agents/tests/improvements-test.ts",
    "test:security": "tsx agents/tests/security-validator-test.ts",
    "demo:intelligent": "tsx agents/demo/intelligent-demo.ts",
    "benchmark:performance": "tsx agents/benchmark/performance-benchmark.ts",
    "benchmark:optimized": "tsx agents/benchmark/performance-benchmark-optimized.ts",
    "check:all": "tsx scripts/setup/parallel-checks.ts",
    "check:all:verbose": "tsx scripts/setup/parallel-checks.ts --verbose",
    "check:all:bail": "tsx scripts/setup/parallel-checks.ts --bail",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:report": "playwright show-report",
    "build": "tsc",
    "context:api": "cd services/context-api && python context_engineering/context_api.py",
    "context:guides": "cd services/context-api && python main.py",
    "context:mcp": "cd mcp-servers/context-engineering && node context_mcp_server.js",
    "context:dev": "concurrently \"npm run context:api\" \"npm run context:guides\"",
    "context:docker": "docker-compose --profile context-engineering up -d",
    "context:docker:down": "docker-compose --profile context-engineering down",
    "dashboard:server": "cd packages/dashboard-server && npm run dev",
    "dashboard:frontend": "cd packages/dashboard && npm run dev",
    "dashboard:dev": "concurrently \"npm run dashboard:server\" \"npm run dashboard:frontend\"",
    "dashboard:build": "cd packages/dashboard-server && npm run build && cd ../dashboard && npm run build",
    "dashboard:install": "cd packages/dashboard-server && npm install && cd ../dashboard && npm install",
    "miyabi:status": "npx miyabi status",
    "miyabi:agent": "npx miyabi agent",
    "miyabi:auto": "npx miyabi auto",
    "miyabi:todos": "npx miyabi todos",
    "miyabi:config": "npx miyabi config",
    "miyabi:setup": "npx miyabi setup",
    "miyabi:docs": "npx miyabi docs"
  },
  "keywords": [
    "ai",
    "agents",
    "autonomous",
    "operations",
    "devops",
    "automation"
  ],
  "author": "Shunsuke Hayashi <https://github.com/ShunsukeHayashi>",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/ShunsukeHayashi/Miyabi.git"
  },
  "homepage": "https://github.com/ShunsukeHayashi/Miyabi#readme",
  "bugs": {
    "url": "https://github.com/ShunsukeHayashi/Miyabi/issues"
  },
  "devDependencies": {
    "@anthropic-ai/claude-code": "^2.0.9",
    "@playwright/test": "^1.56.0",
    "@types/figlet": "^1.5.8",
    "@types/gradient-string": "^1.1.6",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "concurrently": "^9.2.1",
    "dotenv": "^16.3.1",
    "eslint": "^8.54.0",
    "playwright": "^1.56.0",
    "tsx": "^4.7.0",
    "typescript": "^5.8.3",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.20.0",
    "@octokit/graphql": "^7.0.2",
    "@octokit/rest": "^20.0.0",
    "ansi-escapes": "^7.0.0",
    "boxen": "^7.1.1",
    "chalk": "^5.3.0",
    "cli-spinners": "^2.9.2",
    "cli-table3": "^0.6.5",
    "figlet": "^1.7.0",
    "gradient-string": "^2.0.2",
    "log-symbols": "^6.0.0",
    "lru-cache": "^11.2.2",
    "ora": "^8.0.1",
    "p-retry": "^7.1.0",
    "terminal-link": "^3.0.0"
  }
}
