@startuml Miyabi Complete Label System (53 Labels)

' ============================================================================
' Color Definitions (10 Categories)
' ============================================================================
!define STATE_COLOR #E8F5E9
!define AGENT_COLOR #FFF3E0
!define PRIORITY_COLOR #FFEBEE
!define TYPE_COLOR #E3F2FD
!define SEVERITY_COLOR #FFCCBC
!define PHASE_COLOR #F3E5F5
!define SPECIAL_COLOR #FFF9C4
!define TRIGGER_COLOR #FFE0B2
!define QUALITY_COLOR #C8E6C9
!define COMMUNITY_COLOR #E1BEE7

skinparam backgroundColor #FAFAFA
skinparam shadowing false
skinparam packageStyle rectangle
skinparam state {
    BorderColor #424242
    BackgroundColor #FFFFFF
    ArrowColor #757575
    ArrowThickness 2
}

title **Miyabi Complete Label System**\n10 Categories √ó 53 Labels | Entity-Relation Integration (R16, R17, R18, R33)

' ============================================================================
' STATE Labels (8 labels) - Lifecycle Management
' ============================================================================

state "STATE Labels (8)" as STATE #STATE_COLOR {
    state "üì• state:pending" as pending #E8F5E9 : **Initial state**\nNew issue created\nWaiting for analysis
    state "üîç state:analyzing" as analyzing #E8F5E9 : **Analysis phase**\nIssueAgent analyzing\nCoordinatorAgent decomposing
    state "üèóÔ∏è state:implementing" as implementing #E8F5E9 : **Implementation phase**\nCodeGenAgent executing\nWorktree active
    state "üëÄ state:reviewing" as reviewing #E8F5E9 : **Review phase**\nReviewAgent evaluating\nQuality check in progress
    state "‚úÖ state:done" as done #E8F5E9 : **Completed**\nMerged & deployed\nIssue closed
    state "üî¥ state:blocked" as blocked #FFCCBC : **Blocked**\nRequires human intervention\nEscalation triggered
    state "üõë state:failed" as failed #FFCCBC : **Failed**\nQuality score < 80\nTests failed
    state "‚è∏Ô∏è state:paused" as paused #FFF9C4 : **Paused**\nTemporarily suspended\nWaiting for dependencies
}

' ============================================================================
' AGENT Labels (6 labels) - Agent Assignment
' ============================================================================

state "AGENT Labels (6)" as AGENT #AGENT_COLOR {
    state "ü§ñ agent:coordinator" as coordinator #FFF3E0 : **CoordinatorAgent**\nAuthority: üî¥Áµ±Êã¨\nTask: Decomposition & DAG
    state "ü§ñ agent:codegen" as codegen #FFF3E0 : **CodeGenAgent**\nAuthority: üîµÂÆüË°å\nTask: AI code generation
    state "ü§ñ agent:review" as review #FFF3E0 : **ReviewAgent**\nAuthority: üîµÂÆüË°å\nTask: Quality evaluation
    state "ü§ñ agent:issue" as issue #FFF3E0 : **IssueAgent**\nAuthority: üü¢ÂàÜÊûê\nTask: Label inference
    state "ü§ñ agent:pr" as pr #FFF3E0 : **PRAgent**\nAuthority: üîµÂÆüË°å\nTask: PR creation
    state "ü§ñ agent:deployment" as deployment #FFF3E0 : **DeploymentAgent**\nAuthority: üîµÂÆüË°å\nTask: CI/CD deployment
}

' ============================================================================
' PRIORITY Labels (4 labels) - Priority Management
' ============================================================================

state "PRIORITY Labels (4)" as PRIORITY #PRIORITY_COLOR {
    state "üî• priority:P0-Critical" as p0 #FFEBEE : **Critical**\nImmediate action required\nBlocks release
    state "‚ö†Ô∏è priority:P1-High" as p1 #FFEBEE : **High**\nNext sprint priority\nSignificant impact
    state "üìä priority:P2-Medium" as p2 #FFEBEE : **Medium**\nNormal priority\nScheduled work
    state "üìù priority:P3-Low" as p3 #FFEBEE : **Low**\nBacklog item\nNice to have
}

' ============================================================================
' TYPE Labels (7 labels) - Issue Classification
' ============================================================================

state "TYPE Labels (7)" as TYPE #TYPE_COLOR {
    state "‚ú® type:feature" as feature #E3F2FD : **Feature**\nNew functionality\nEnhancement
    state "üêõ type:bug" as bug #E3F2FD : **Bug**\nDefect fix\nError correction
    state "üìö type:docs" as docs #E3F2FD : **Documentation**\nDoc updates\nREADME improvements
    state "üîß type:refactor" as refactor #E3F2FD : **Refactor**\nCode improvement\nNo behavior change
    state "üß™ type:test" as test #E3F2FD : **Test**\nTest additions\nCoverage improvement
    state "üèóÔ∏è type:architecture" as architecture #E3F2FD : **Architecture**\nSystem design\nInfrastructure change
    state "üöÄ type:deployment" as deployment_type #E3F2FD : **Deployment**\nCI/CD changes\nRelease preparation
}

' ============================================================================
' SEVERITY Labels (4 labels) - Escalation & Impact
' ============================================================================

state "SEVERITY Labels (4)" as SEVERITY #SEVERITY_COLOR {
    state "üö® severity:Sev.1-Critical" as sev1 #FFCCBC : **Sev.1 - Critical**\nProduction down\nEscalate: CISO/CTO
    state "‚ö†Ô∏è severity:Sev.2-High" as sev2 #FFCCBC : **Sev.2 - High**\nMajor functionality broken\nEscalate: TechLead
    state "üìä severity:Sev.3-Medium" as sev3 #FFCCBC : **Sev.3 - Medium**\nMinor functionality issue\nAgent can handle
    state "üìù severity:Sev.4-Low" as sev4 #FFCCBC : **Sev.4 - Low**\nCosmetic issue\nOptional fix
}

' ============================================================================
' PHASE Labels (5 labels) - Project Phase
' ============================================================================

state "PHASE Labels (5)" as PHASE #PHASE_COLOR {
    state "üéØ phase:planning" as planning #F3E5F5 : **Planning**\nRequirement gathering\nDesign phase
    state "üèóÔ∏è phase:implementation" as implementation #F3E5F5 : **Implementation**\nActive development\nCode generation
    state "üß™ phase:testing" as testing #F3E5F5 : **Testing**\nQuality assurance\nTest execution
    state "üöÄ phase:deployment" as deployment_phase #F3E5F5 : **Deployment**\nRelease preparation\nCI/CD pipeline
    state "üìä phase:monitoring" as monitoring #F3E5F5 : **Monitoring**\nPost-deployment\nPerformance tracking
}

' ============================================================================
' SPECIAL Labels (7 labels) - Special Operations
' ============================================================================

state "SPECIAL Labels (7)" as SPECIAL #SPECIAL_COLOR {
    state "üîê security" as security #FFF9C4 : **Security**\nSecurity vulnerability\nRequires CISO review
    state "üí∞ cost-watch" as cost #FFF9C4 : **Cost Watch**\nExpensive operation\nBudget impact
    state "üîÑ dependencies" as dependencies #FFF9C4 : **Dependencies**\nPackage updates\nDependency changes
    state "üéì learning" as learning #FFF9C4 : **Learning**\nExperimental\nResearch task
    state "üî¨ experiment" as experiment #FFF9C4 : **Experiment**\nA/B testing\nPrototype
    state "üö´ wontfix" as wontfix #FFF9C4 : **Won't Fix**\nIntended behavior\nOut of scope
    state "üîÅ duplicate" as duplicate #FFF9C4 : **Duplicate**\nDuplicate issue\nReference original
}

' ============================================================================
' TRIGGER Labels (4 labels) - Automation Triggers
' ============================================================================

state "TRIGGER Labels (4)" as TRIGGER #TRIGGER_COLOR {
    state "ü§ñ trigger:agent-execute" as trigger_execute #FFE0B2 : **Agent Execute**\nTrigger: CoordinatorAgent\nAction: Start autonomous flow
    state "üìä trigger:generate-report" as trigger_report #FFE0B2 : **Generate Report**\nTrigger: ReportAgent\nAction: Create analysis report
    state "üöÄ trigger:deploy-staging" as trigger_staging #FFE0B2 : **Deploy Staging**\nTrigger: DeploymentAgent\nAction: Deploy to staging
    state "üöÄ trigger:deploy-production" as trigger_production #FFE0B2 : **Deploy Production**\nTrigger: DeploymentAgent\nAction: Deploy to production
}

' ============================================================================
' QUALITY Labels (4 labels) - Quality Scoring
' ============================================================================

state "QUALITY Labels (4)" as QUALITY #QUALITY_COLOR {
    state "‚≠ê quality:excellent" as quality_excellent #C8E6C9 : **Excellent (90-100)**\nAll checks passed\nHigh quality code
    state "‚úÖ quality:good" as quality_good #C8E6C9 : **Good (80-89)**\nMinor issues\nAcceptable quality
    state "‚ö†Ô∏è quality:needs-improvement" as quality_needs #C8E6C9 : **Needs Improvement (60-79)**\nSeveral issues\nRefactoring needed
    state "üî¥ quality:poor" as quality_poor #C8E6C9 : **Poor (0-59)**\nMajor issues\nRequires rework
}

' ============================================================================
' COMMUNITY Labels (4 labels) - Community Engagement
' ============================================================================

state "COMMUNITY Labels (4)" as COMMUNITY #COMMUNITY_COLOR {
    state "üëã good-first-issue" as first_issue #E1BEE7 : **Good First Issue**\nBeginner friendly\nMentor available
    state "üôè help-wanted" as help #E1BEE7 : **Help Wanted**\nCommunity contribution\nExtra hands needed
    state "‚ùì question" as question #E1BEE7 : **Question**\nClarification needed\nDiscussion required
    state "üí¨ discussion" as discussion #E1BEE7 : **Discussion**\nOpen for debate\nFeedback welcome
}

' ============================================================================
' STATE Transition Flow (Complete Lifecycle)
' ============================================================================

[*] --> pending : Issue created

' Normal flow
pending --> analyzing : **R16**: trigger:agent-execute\nIssueAgent launched
analyzing --> implementing : **R17**: state defined\nCoordinatorAgent assigns
implementing --> reviewing : PR created\nReviewAgent evaluates
reviewing --> done : **Merge & Deploy**\nQuality >= 80

' Blocked scenarios
implementing --> blocked : **Error encountered**\nEscalation triggered
reviewing --> blocked : **Critical issue found**\nSev.1 escalation
blocked --> implementing : **Issue resolved**\nRetry

' Failed scenarios
reviewing --> failed : **Quality score < 80**\nTests failed
failed --> implementing : **Fixes applied**\nRe-run pipeline

' Paused scenarios
implementing --> paused : **Waiting for dependencies**\nExternal blocker
paused --> implementing : **Dependencies resolved**\nResume work

done --> [*]

' ============================================================================
' Agent Assignment Flow (R16: Label triggers Agent)
' ============================================================================

note right of trigger_execute
  **R16: Label --triggers--> Agent**

  When trigger:agent-execute is applied:
  1. GitHub Actions webhook fires
  2. CoordinatorAgent launches
  3. Issue analysis begins
  4. Tasks decomposed & assigned
end note

' ============================================================================
' Priority & Severity Escalation
' ============================================================================

p0 --> blocked : **Immediate escalation**\nNotify: CTO
sev1 --> blocked : **Critical escalation**\nNotify: CISO (security)\nNotify: CTO (system)
sev1 --> security : If security vulnerability

' ============================================================================
' Quality Score Flow
' ============================================================================

reviewing --> quality_excellent : Score 90-100\n‚≠ê Excellent
reviewing --> quality_good : Score 80-89\n‚úÖ Good (Pass)
reviewing --> quality_needs : Score 60-79\n‚ö†Ô∏è Needs work
reviewing --> quality_poor : Score 0-59\nüî¥ Poor (Fail)

quality_poor --> failed : Auto-fail\nRefactor required

' ============================================================================
' Legend & Statistics
' ============================================================================

legend bottom left
  **Miyabi Complete Label System**

  **Statistics**:
  ‚Ä¢ 53 Labels in 10 Categories
  ‚Ä¢ 4 Entity Relations (R16, R17, R18, R33)
  ‚Ä¢ 8 State transitions (complete lifecycle)
  ‚Ä¢ 6 Agents integrated
  ‚Ä¢ 4 Automation triggers

  **Label Categories**:
  1. STATE (8) - Lifecycle management
  2. AGENT (6) - Agent assignment
  3. PRIORITY (4) - Priority levels (P0-P3)
  4. TYPE (7) - Issue classification
  5. SEVERITY (4) - Escalation levels (Sev.1-4)
  6. PHASE (5) - Project phases
  7. SPECIAL (7) - Special operations
  8. TRIGGER (4) - Automation triggers
  9. QUALITY (4) - Quality scores (0-100)
  10. COMMUNITY (4) - Community engagement

  **Entity Relations**:
  ‚Ä¢ **R16**: Label --triggers--> Agent (TRIGGER labels)
  ‚Ä¢ **R17**: Label --defines-state--> Issue (STATE labels)
  ‚Ä¢ **R18**: Label --categorizes--> Task (TYPE/PRIORITY labels)
  ‚Ä¢ **R33**: Label --triggers-notification-to--> Discord (All labels)

  **Key Features**:
  ‚Ä¢ Auto-assignment by IssueAgent (AI-powered)
  ‚Ä¢ State-driven automation (GitHub Actions)
  ‚Ä¢ Agent triggering (Label-based)
  ‚Ä¢ Quality scoring (0-100 scale)
  ‚Ä¢ Escalation routing (Sev.1-4 ‚Üí Human)
  ‚Ä¢ Discord notifications (All state changes)

  **Automation**:
  ‚Ä¢ IssueAgent: Auto-applies TYPE, PRIORITY, SEVERITY
  ‚Ä¢ CoordinatorAgent: Auto-applies AGENT, STATE
  ‚Ä¢ ReviewAgent: Auto-applies QUALITY
  ‚Ä¢ DeploymentAgent: Auto-applies deployment labels

  **Documentation**:
  ‚Ä¢ Guide: docs/LABEL_SYSTEM_GUIDE.md
  ‚Ä¢ Config: .github/labels.yml
  ‚Ä¢ SDK Integration: docs/AGENT_SDK_LABEL_INTEGRATION.md
  ‚Ä¢ Entity Model: docs/ENTITY_RELATION_MODEL.md

  **Color Legend**:
  ‚Ä¢ Green - STATE (lifecycle)
  ‚Ä¢ Orange - AGENT (assignment)
  ‚Ä¢ Red - PRIORITY (urgency)
  ‚Ä¢ Blue - TYPE (classification)
  ‚Ä¢ Light Orange - SEVERITY (escalation)
  ‚Ä¢ Purple - PHASE (project phase)
  ‚Ä¢ Yellow - SPECIAL (operations)
  ‚Ä¢ Peach - TRIGGER (automation)
  ‚Ä¢ Light Green - QUALITY (scoring)
  ‚Ä¢ Lavender - COMMUNITY (engagement)
end legend

@enduml
