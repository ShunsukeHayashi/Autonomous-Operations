/**
 * Welcome Issue creation module
 *
 * Creates an initial welcome Issue to demonstrate automation
 */

import { Octokit } from '@octokit/rest';

interface WelcomeIssue {
  number: number;
  html_url: string;
}

/**
 * Create welcome Issue with instructions
 */
export async function createWelcomeIssue(
  owner: string,
  repo: string,
  token: string
): Promise<WelcomeIssue> {
  const octokit = new Octokit({ auth: token });

  const { data } = await octokit.issues.create({
    owner,
    repo,
    title: '🎉 Welcome to Agentic OS!',
    body: `# Welcome to Autonomous Development! 🤖

Your project is now powered by **Agentic OS** - a fully automated AI development framework.

## ✨ What You Get

- **6 AI Agents** ready to work on your Issues
- **Automatic Issue → PR pipeline** (no manual coding needed)
- **Label-based state machine** for progress tracking
- **Real-time monitoring** via GitHub Projects

## 🚀 How to Use

### Step 1: Create an Issue

Just describe what you want to build:

\`\`\`bash
gh issue create --title "Add user authentication" --body "Implement login with email/password"
\`\`\`

### Step 2: Wait (Seriously, That's It)

The agents will automatically:
1. **Analyze** the Issue and add labels
2. **Break down** the task into steps
3. **Implement** the feature
4. **Review** the code quality
5. **Create** a Pull Request

You'll see a PR appear within 10-15 minutes! ✨

### Step 3: Review and Merge

- Check the PR
- Request changes if needed
- Merge when ready
- Agent deploys automatically

## 📊 Monitor Progress

### Via CLI
\`\`\`bash
npx agentic-os status

# Watch mode (auto-refresh)
npx agentic-os status --watch
\`\`\`

### Via GitHub
- **Issues tab**: See state labels (pending → analyzing → implementing → reviewing → done)
- **Projects tab**: View agent assignments and metrics
- **Actions tab**: Watch workflows in real-time

## 🏷️ State Labels

Issues move through states automatically:

- \`📥 state:pending\` - Awaiting agent assignment
- \`🔍 state:analyzing\` - Being analyzed
- \`🏗️ state:implementing\` - Code being written
- \`👀 state:reviewing\` - Under quality review
- \`✅ state:done\` - Completed and merged

## 🤖 Agent Types

Each agent has a specific role:

- **CoordinatorAgent** - Task orchestration and planning
- **CodeGenAgent** - Writing implementation code
- **ReviewAgent** - Quality checks and testing
- **IssueAgent** - Issue analysis and labeling
- **PRAgent** - Pull request management
- **DeploymentAgent** - Production deployment

You don't need to assign agents manually - it's automatic!

## 💡 Tips

### For Best Results
- Be specific in Issue descriptions
- Break down large features into smaller Issues
- Use labels to set priority (P0-Critical, P1-High, etc.)
- Review PRs promptly to keep agents moving

### Common Patterns

**Feature Development:**
\`\`\`bash
gh issue create --title "Add dark mode toggle" \\
  --body "Create toggle button in settings that switches theme"
\`\`\`

**Bug Fixes:**
\`\`\`bash
gh issue create --title "Fix login redirect loop" \\
  --body "After successful login, user gets stuck in redirect loop" \\
  --label "🐛 type:bug"
\`\`\`

**Documentation:**
\`\`\`bash
gh issue create --title "Document API endpoints" \\
  --body "Add JSDoc comments to all API route handlers" \\
  --label "📚 type:docs"
\`\`\`

## 🔧 Configuration

All configuration is in \`.github/\`:
- \`labels.yml\` - 53 labels for state management
- \`workflows/\` - GitHub Actions automation
- \`WORKFLOW_RULES.md\` - Development guidelines

## 📚 Documentation

- [Getting Started Guide](https://github.com/ShunsukeHayashi/Autonomous-Operations/blob/main/docs/GETTING_STARTED.md)
- [Agent Operations Manual](https://github.com/ShunsukeHayashi/Autonomous-Operations/blob/main/docs/AGENTS.md)
- [System Architecture](https://github.com/ShunsukeHayashi/Autonomous-Operations/blob/main/docs/system-architecture.puml)

## 🆘 Need Help?

- Check status: \`npx agentic-os status\`
- View logs: Check GitHub Actions tab
- Report issues: [Agentic OS Issues](https://github.com/ShunsukeHayashi/Autonomous-Operations/issues)

## 🎯 Try It Now!

Close this Issue and create your first real task:

\`\`\`bash
gh issue create --title "Your task here" --body "Describe what you want"
\`\`\`

Then watch the magic happen! 🪄

---

**Pro tip:** You can close this Issue now. It was just a demo to show you how the system works.

🤖 Generated by Agentic OS`,
    labels: ['📚 type:docs', '👋 good-first-issue'],
  });

  return {
    number: data.number,
    html_url: data.html_url,
  };
}
